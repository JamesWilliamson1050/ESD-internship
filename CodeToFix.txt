# If a module has a single module code it's type is a string
    #     if moduleCodeType == str:
    #         # TODO fix updating module information
    #         df.at[index, 'Module Code'] = moduleCode
    #         df.at[index, 'Module Level'] = moduleLevel
    #
    #     # If a module code has multiple values then it is an array
    #     elif moduleCodeType == numpy.ndarray:
    #         for i in range(len(moduleCode)):
    #             tempRow = row
    #             tempRow['Module Code', 'Module Level'] = [moduleCode[i], moduleLevel[i]]
    #
    #             df = df.append(tempRow)
    #
    #     # Module code hasn't been found
    #     elif moduleCode is None:
    #         if '&' in moduleTitle or 'And' in moduleTitle:
    #             print(moduleTitle.encode("utf-8"))
    #             moduleTitle = wordFilter.andFilter(moduleTitle)
    #
    #         # If course has been split into 2
    #         if type(moduleTitle) is tuple:  #
    #
    #             # The titles of the 2 courses
    #             title1 = moduleTitle[0]
    #             title2 = moduleTitle[1]
    #
    #             # Keeping a copy of the current row
    #             tempRow = row.copy()
    #
    #             # Setting the titles of the row and copy of the row to the new courses
    #             row['Module Title'] = title1
    #             tempRow['Module Title'] = title2
    #
    #             # Searching for the course title
    #             moduleSearch = degreeSearch(title1)
    #             moduleCode = moduleSearch[0]
    #             moduleLevel = moduleSearch[1]
    #             row['Module Code'] = moduleCode
    #             row['Module Level'] = moduleLevel
    #
    #             moduleSearch = degreeSearch(title2)
    #             moduleCode = moduleSearch[0]
    #             moduleLevel = moduleSearch[1]
    #             tempRow['Module Code'] = moduleCode
    #             tempRow['Module Level'] = moduleLevel
    #
    #             df = df.append(tempRow)
    #
    #         elif type(moduleTitle) == str:
    #             moduleSearch = degreeSearch(moduleTitle)
    #             moduleCode = moduleSearch[0]
    #             moduleLevel = moduleSearch[1]
    #             moduleCodeType = type(moduleCode)
    #             df.at[index, 'Module Code'] = moduleCode
    #             df.at[index, 'Module Level'] = moduleLevel
    #             row['Module Title'] = moduleTitle
    #
    #         elif moduleCodeType == numpy.ndarray:
    #             for i in range(len(moduleCode)):
    #                 tempRow = row
    #                 tempRow['Module Code', 'Module Level'] = [moduleCode[i], moduleLevel[i]]
    #                 df = df.append(tempRow)
    #
    #         elif moduleCode is None:
    #             moduleTitle = wordFilter.colonFilter(moduleTitle)
    #             moduleSearch = degreeSearch(moduleTitle)
    #             moduleCode = moduleSearch[0]
    #             moduleLevel = moduleSearch[1]
    #             moduleCodeType = type(moduleCode)
    #             df.at[index, 'Module Code'] = moduleCode
    #             df.at[index, 'Module Level'] = moduleLevel
    #
    # df = df.sort_values('Degree Level', ascending=False)
    # df.to_csv('moduleInfoClassCodes.csv', sep=',', encoding="utf-8", index=False)